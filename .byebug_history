quit
s
url
c
s
@array_url
s
quit
c
x
c
@url
c
s
quit
data
data[1..-4]
data[0]
data.class
data.calss
data.(1..-4)
data(1..-4)
data
quit
data
quit
params
@url
params
quit
c
bool_exist
bool_exits
c
s
c
s
bool_exist
s
quit
Url.exists?(short_url: string_random)
Url.exists?(short_url: "AgQx8j7")
Url.exists?(short_url: "qgQx8j7")
Url.exists?[short_url: "qgQx8j7"]
Url.exist?[short_url: "qgQx8j7"]
Url.all
@array_url
@array_url.all
c
@url
c
@url
c
url.errors
n
url.errors
n
url.errors
n
url.errors
c
n
quit
url
n
url.long_url
n
url
c
url.long_url
url
c
n
url.long_url
n
url
c
url
c
quit
url
c
/:url_short
:url_short
url
c
url.long_url
c
quit
url.long_url
q
quit
x.short_url
x.short.url
x.long_url
c
link
c
link
s
c
@url.long_url
c
p params
params
c
@url.click_count+=1
@url.click_count
@url.click_count+=1
@url.click_count
@url
quit
c
params
c
params
c
params
:short_url
short_url
quit
c
params
c
Url.all
c
params
Url.all
c
Url.all
params
c
Url.all
c
Url.all
c
Url.all
c
Url.all
c
Url.all
c
x
Url.all
c
Url.all
c
Url.all
Url.al
a[:long_url]
a.class
a=params[:url]
params[:url].class
params[:url]
params[url]
params[:long_url]
print params
s
params.inspect
quit
params
print params[:url]
print params[:long_url]
print params
print params[:url]
quit
Url.destroy_all
Url.all
Url
url
x
c
x[:long_url]
x[:short_url]
quit
x[:short_url]
x[:long_url]
quit
b=x[:short_url]
b=x[:click_count]
b=x[:long_url]
x.class
a[13]
a[12]
a[8]
a[5]
a[1]
a[2]
a["long_url"]
print a
puts a
a.class
a.to_a
a=x.long_url
x.long_url
x[:long_url]
x[:long_url][:long_url]
x[:long_url][:long_urk]
x[:long_url]
p x
quit
c
s
c
s
x.long_url
q
c
quit
url_ref
q
a
b
b.join
b=a.map(&:long_url)
a.map(&:long_url)
a.map(& :long_url)
a.map[& :long_url]
a.map{& :long_url}
a.map{|x| & :long_url}
a.map{|x| &:long_url}
a=Url.select(:long_url).where(short_url: params[:short_url])
Url.select(:long_url).where(short_url: params[:short_url])
Url.find_by(short_url: params[:short_url])
url.find_by(short_url: params[:short_url])
a["long_url"]
a[:long_url]
a
a.class
a.to_a
a
a=Url.where(short_url="3IJN9P0")
Url.where(short_url="3IJN9P0")
Url.where(short_url:"3IJN9P0")
Url.select(:long_url).where(short_url:"3IJN9P0")
Url.select(:long_url).where(short_url = "3IJN9P0")
Url.select(:long_url).where(short_url: "3IJN9P0")
Url.select(:long_url).where(short_url = "3IJN9P0")
Url.where(id: 1)
Url.where(short_url: '3IJN9P0')
Url.select(:long_url).where(short_url: '3IJN9P0')
Url.all
url.all
Url.select(:long_url).where(short_url: '3IJN9P0')
Url.select(:long_url).where(short_url: 3IJN9P0)
Url.select(:long_url).where(short_url: 3IJN(P0)
params[:short_url]
params
p short_url
:short_url
: short_url
p short_url
p :short_url
P :short_url
c
q
